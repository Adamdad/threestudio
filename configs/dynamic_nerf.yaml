name: "dreamfusion-if"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 0

data_type: "dynamic-multiview-camera-datamodule"
data:
  train_downsample_resolution: 8
  eval_downsample_resolution: 8
  eval_data_interval: 8
  dataroot: ???

system_type: "dynamic-instructnerf2nerf-system"
system:

  geometry_type: "dynamic-implicit-volume"
  geometry:
    radius: 1.
    normal_type: analytic

    pos_encoding_config:
      otype: HashGrid
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 16
      per_level_scale: 1.4472692374403782 # max resolution 4096

    density_bias: "blob_magic3d"
    density_activation: softplus
    density_blob_scale: 10.
    density_blob_std: 0.5

    dynamic_flow_name: "dynamic-flow-mlp"
    dynamic_flow_config:
      n_feature_dims: 3

  material_type: "diffuse-with-point-light-material"
  material:
    ambient_only_steps: 9999999
    albedo_activation: sigmoid

  background_type: "solid-color-background"
  background:
    color: [0, 0, 0]

  renderer_type: "dynamic-implicit-renderer"
  renderer:
    implicit_renderer: "nerf-volume-renderer"
    implicit_renderer_config:
      radius: ${system.geometry.radius}
      num_samples_per_ray: 384

  guidance_type: "stable-diffusion-instructpix2pix-guidance"
  guidance:
    min_step_percent: 0.02
    max_step_percent: 0.98

  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "runwayml/stable-diffusion-v1-5"
    prompt: "Turn him into Elon Musk"

  loggers:
    wandb:
      enable: false
      project: 'threestudio'
      name: None

  loss:
    lambda_orient: [0, 10.0, 1000., 5000.0]
    lambda_sparsity: 1.0
    lambda_opaque: 1.0
    lambda_l1: 10.
    lambda_p: 10.

  optimizer:
    name: Adam
    args:
      lr: 0.01
      betas: [0.9, 0.99]
      eps: 1.e-15
    params:
      geometry:
        lr: 0.0001

trainer:
  max_steps: 15000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 100
  enable_progress_bar: true
  precision: 32-true

checkpoint:
  save_last: true # save at each validation time
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
